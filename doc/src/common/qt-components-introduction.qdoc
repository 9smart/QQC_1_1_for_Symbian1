/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qt-components-introduction.html

    \title Introduction to the Qt Quick Components

    Qt Quick Components are built on top of \l {Qt Quick} and provide
    native-look user interface elements for your QML-based application. They are
    bundled together as a module that you can import into your QML file. Once
    you have imported the components module, you can use the components just as
    you would use standard \l{QML Elements}{QML elements} such as \l Rectangle
    and \l Text. You may then implement the business logic of your application
    with JavaScript or Qt C++.

    \image common/components-stack.png

    \section1 Developing Applications with Components

    The components are implemented separately for both Symbian and MeeGo to
    match the native look and feel of each platform. Components from both sets
    have similar interfaces and many components share a common interface. The
    compatible interfaces allows the developers to share some common code but
    give the freedom to customize their applications to each platform.

    \list
    \o \l{Functional List of Symbian Components}{Symbian Components} - A set of
    components for application development using the latest Symbian user
    interface design.
    \o \l{Extras Components} - A set of components that add a few more
    components to the Symbian set.
    \endlist

    \section1 Importing the Components

    After \l {Building the Qt Quick Components}{building} the components, you
    may import the components in your QML application with one of the
    following imports at the top of your QML document:

    \code
    import com.nokia.symbian 1.1    // Symbian components
    import com.nokia.meego 1.0      // MeeGo components
    \endcode

    In addition, there are components that are \e extras. They supplement the
    platform components. For example, building the sources for the Symbian
    platform will also build the \l{Extras Components} for Symbian. The Extras,
    however, are imported as a different component set.

    \code
    import com.nokia.extras 1.1  //Symbian Extras set
    \endcode

    \note The latest version of the Symbian Components and Extras Components is 1.1 as
    specified in the \c import statements above. While version 1.0 is provided along with
    the newer version, it is advisable to import the latest version when developing
    applications. See
    \l{What's New in the Qt Quick Components for Symbian Release}{What's new in the 1.1 release}
    for further information.

    The cross-platform components \l Checkable and \l CheckableGroup are located
    in a separate plugin. Use the following \c import statement when you need to
    utilize them:

    \code
    import Qt.labs.components 1.1
    \endcode

    \section1 Interface Designs

    Interface designs using QML differs from the traditional Qt UI designs. With
    the introduction of Qt Quick Components, there are several
    \l{Common Interface Designs}{guidelines} to help with making smart development decisions.
*/
