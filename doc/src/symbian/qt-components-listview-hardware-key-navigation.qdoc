/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

    \page listview-hardware-key-navigation.html
    \ingroup qt-components-pattern-symbian
    \ingroup qt-components-pattern
    \title Hardware Key Navigation on Symbian Lists

    \brief Using hardware keys to provide an alternative input method

    The Symbian-specific \l ListItem component has inbuilt support for handling
    'up' and 'down' hardware keys. When the \c ListView has focus, the 'up' key
    will decrement the current index. Similarly, the 'down' key will increment
    the current index.

    You can set the \c ListView component to have focus using \c
    Item::ForceActiveFocus(), for example, as follows:

    \code
    ListView {
        id: listView

        Component.onCompleted: {
            listView.forceActiveFocus()
        }
    \endcode

    If you want to use other hardware keys, the \c Keys property of the \l ListItem
    provides a mechanism for doing so. You can handle hardware key presses with
    the \c Keys.onPressed() and \c Keys.onReleased() handlers.

    The code snippet below illustrates how the \c ListView delegate deletes a list
    item when the user presses the backspace key.

    \code
    Component {
        id: listDelegate

        ListItem {
            id: listItem

            Keys.onPressed: {
                if (event.key == Qt.Key_Backspace) {
                    if (listView.currentIndex >= 0)
                        listView.model.remove(listView.currentIndex)
                }
            }
        }
    }
    \endcode

    \section1 Selecting a Control Inside a ListItem Component

    Sometimes it is necessary to select a control inside the \l ListItem. The
    following example illustrates how to extend the \l ListItem
    component's functionality to handle 'left' and 'right' keys to select a control.

    \image symbian/listview_hw_key_navigation.png

    \snippet src/snippets/symbian/snippet-listview-horizontal-navigation.qml 0
*/


