/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

    \qmlclass ProgressBar
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief Shows the progress or continuation of a long-running operation.

    Some operations take a period of time to be performed and the user needs
    a confirmation that the operation is still ongoing. If the user does not get
    any confirmation, they might suspect that they did something wrong or that
    the device has broken. A progress bar is one of available mechanisms for
    providing this reassurance to the user.

    ProgressBar has the following presentation modes:

    \list

        \o \c determinate - the operation's duration is approximately known. The
        progress bar shows the proportion of the progress so far.

        \o \c indeterminate - the operation's duration is unknown. The progress
        bar is animated but no proportion of the progress is indicated.

    \endlist

    The user interface guidelines for a platform specify the occasions when a
    progress bar should be displayed and how to display it. However, a common
    rule of thumb is that if an operation takes less than 3 seconds, it is not
    necessary to show the progress bar.

    \section1 Using a Determinate Progress Bar

    A determinate progress bar has a minimum value, a maximum value and a
    current value. When you set the current value, the progress bar is drawn to
    indicate the proportion of that value between the minimum and maximum
    values.

    For example, if the minimum value is 0 and the maximum value is 100, setting
    \c value to 25 will result in the progress bar being filled one quarter along
    and it will look like the image below.

    \image symbian/progressbar_onequarter.png

    The following code snippet creates a progress bar and demonstrates how a
    progress bar works. The timer is a repeating timer and, every time it is
    triggered, it increments the progress bar's \c value property. When the
    maximum value of the progress bar is reached, the "progress" is reset to the
    minimum value and it starts again.

    \snippet src/snippets/symbian/snippet-progressbar.qml 0

    \section1 Using an Indeterminate Progress Bar

    To show an indeterminate progress bar, set the \c indeterminate
    property to \c true. Setting the different value properties of an
    indeterminate progress bar has no effect. An indeterminate progress bar
    looks like the image below.

    \image symbian/progressbar_indeterminate.png

    The following code snippet binds the \c visible property of an indeterminate
    progress bar to the \c running property of the timer from the example above.

    \snippet src/snippets/symbian/snippet-progressbar.qml 1
*/

/*!
    \qmlproperty real ProgressBar::minimumValue

    The start value of a long-running operation. The progress bar's width is
    zero when the current value is set to \c minimumValue.

    The default value is \c 0.0

*/

/*!
    \qmlproperty real ProgressBar::maximumValue

    The end value of a long-running operation. The progress bar shows its
    full width when the current value is set to \c maximumValue.

    The default value is \c 1.0

*/

/*!
    \qmlproperty real ProgressBar::value

    The progress bar's current value. The progress bar's length is calculated as
    the proportion of \c value between \c minimumValue and \c maximumValue. For
    example, if the \c value is in the middle of \c minimumValue and \c
    maximumValue, the progress bar will be filled half way along.

    The default value is \c 0.0
*/

/*!
    \qmlproperty bool ProgressBar::indeterminate

    Indicates whether the operation's duration is known or not. The property can
    have the following values:

    \list

    \o \c true - the operation's duration is unknown, so the progress bar is
    animated. The  \c value, \c minimum, and \c maximum properties are ignored.

    \o \c false - the operation's duration is known, so the progress bar is
    drawn to indicate progress between the \c minimum and \c maximum values.

    \endlist

    The default value is \c false.
*/

/*!
    \qmlproperty bool ProgressBar::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
