/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass ListItem
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief Symbian: Provides a template for creating a ListView delegate.

    A ListItem does not contain any visible content by default, it has only an 
    invisible padding area to which you can anchor other items. This means that 
    all the ListItem components in a list can have common margins.

    \image symbian/listitem_padding.png
    \e {A ListItem with the padding rectangle drawn as white}

    \image symbian/listitem_content.png
    \e {A ListItem with items anchored to the padding area}

    \section1 Implementing a ListItem

    The following code snippet implements a ListItem with a text item on the top
    and subtitle text below. The two items are aligned in a column and they have
    the standard vertical spacing for a ListItem. The code snippet results a
    default state list item shown in the list below.

    \snippet src/snippets/symbian/snippet-listitem.qml 0

    \section1 ListItem States

    A ListItem can have one of the four internal states:

    \list
      \o \c "" - The default state of a ListItem.
      \image symbian/listitem_default.png
      \o \c "Pressed" - The ListItem enters this state when the user presses
      the ListItem.
      \image symbian/listitem_pressed.png
      \o \c "Focused" - This state indicates that the list item has the focus 
      but is not yet selected. This is only available on devices that have 
      hardware selection keys that allow the user to navigate a list without 
      touching the screen.
      \image symbian/listitem_highlight.png
      \o \c "Disabled" - In this state the ListItem does not handle any touch
      or hardware inputs and the ListItem does not emit signals.
      \image symbian/listitem_disabled.png
    \endlist

    \sa ListHeading, ListItemText, ListView

*/

/*!
    \qmlsignal ListItem::clicked()

    This signal is emitted when the user presses and then releases the list item.

*/

/*!
    \qmlsignal ListItem::pressAndHold()

    This signal is emitted when the user presses on the list item for the "long
    press" period of time. The length of time for a long press is the same as
    for MouseArea::onPressAndHold() which is currently 800ms.

*/

/*!
    \qmlproperty string ListItem::mode read-only

    The mode of the ListItem.

    This property can be used to create an association between ListItem and
    ListItemText. This way ListItemText is aware of the internal state
    of ListItem.

    \snippet src/snippets/symbian/snippet-listitem.qml 1

*/

/*!
    \qmlproperty Item ListItem::paddingItem read-only

    The invisible padding rectangle for the ListItem that objects can be anchored to.
*/

/*!
    \qmlproperty bool ListItem::enabled

    If \c true, the user can interact with this list item. If \c false, the list
    item is disabled and does nothing when the user selects it. The default
    value of the property is \c true.

*/

/*!
    \qmlproperty bool ListItem::subItemIndicator

    If \c true, the list item shows a graphical indication that pressing it will show
    the user another item to select. For example, when the user presses the item,
    another ListView is shown to the user.

    The default value of the property is \c false.

    \note
    It is the responsibility of a developer to implement what happens when a ListItem
    with a subItemIndicator is pressed. This can be done by handling the pressed
    signal of a ListItem.

    \image symbian/listitem_subitemindicator.png
    \e ListItem with with a subitem indicator
*/

/*!
    \qmlproperty bool ListItem::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
