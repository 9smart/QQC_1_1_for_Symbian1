/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/
/*!

    \qmlclass ScrollBar
    \ingroup qt-components
    \ingroup qt-components-symbian
    \since 1.0
    \inherits Item

    \brief Adds a visual indication of the position and interaction of the
    contents in a \l Flickable element.

    A ScrollBar can be used with \l Flickable items as well as items derived
    from it, such as \l ListView and \l GridView items. ScrollBar should be a
    sibling of the Flickable. However, because ScrollBar is not a child of the
    Flickable, it has to be \bold {explicitly anchored} to the Flickable.

    \note Both ScrollBar and \l ScrollDecorator components display bars to a
    Flickable item, but the ScrollDecorator is already anchored to the Flickable item.

    \sa ScrollDecorator, Flickable

    \section1 ScrollBar Usage

    The code snippet below illustrates how to attach a ScrollBar to a ListView.

    \code
    Item {
        x: 10
        width: 400
        anchors.top: parent.top
        anchors.bottom: parent.bottom

        ListView {
            id: list
            anchors.fill: parent
            ...
        }

        ScrollBar {
            flickableItem: list
            anchors { right: list.right; top: list.top }
        }
    }
    \endcode

    The code snippet below illustrates how to anchor a horizontal ScrollBar to a 
    \l GridView.

    \code
    Item {
        x: 10
        width: 400
        anchors.top: parent.top
        anchors.bottom: parent.bottom

        GridView {
            id: grid
            anchors.fill: parent
            ...
        }

        ScrollBar {
            id: horizontal
            flickableItem: grid
            orientation: Qt.Horizontal
            anchors { left: grid.left; bottom: grid.bottom }
        }
    }
    \endcode

    \sa Flickable, GridView, ListView, ScrollDecorator

*/

/*!
    \qmlproperty Flickable ScrollBar::flickableItem

    The \c Flickable to which the Scrollbar is anchored.

    If the value is not set, the scroll bar is not shown.

    The default value of the property is \c null.

*/

/*!
    \qmlproperty int ScrollBar::orientation

    The orientation of the scroll bar, either \c Qt.Vertical, or \c
    Qt.Horizontal.

    The default value is \c Qt.Vertical.

*/
/*!
    \qmlproperty bool ScrollBar::interactive

    If interactive is \c true, the user can move the \c flickableItem content by
    touching and dragging the scroll bar handle. If interactive is \c false, the
    scroll bar is \e indicative, that is, similar to a \c ScrollDecorator.
    Setting the interactive to \c false does not affect the key navigation
    support of ScrollBar that can be defined with \c Item::focus.

    The default value is \c true.

*/

/*!
    \qmlproperty int ScrollBar::policy

    Defines the situations when the scroll bar is shown. A scroll bar can
    have the following policies:

    \list
      \o \c Symbian.ScrollBarWhenScrolling - the scroll bar is shown when the
      user scrolls a \c Flickable or drags and starts hideout. This policy
      inherits the \c Symbian.ScrollBarWhenNeeded policy.

      \o \c Symbian.ScrollBarWhenNeeded - Scroll bar is shown when the content
      of \c flickableItem does not fit in the screen.
    \endlist

    The default value is \c Symbian.ScrollBarWhenScrolling.

    \sa flash()
*/

/*!
    \qmlmethod ScrollBar::flash()

    Shows and then hides the scroll bar indicating to the user that there is
    scrollable content available in \c flickableItem. This method is most
    applicable when the policy is \c Symbian.ScrollBarWhenScrolling and the
    scroll bar is already hidden.

*/

/*!
    \qmlproperty bool ScrollBar::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
