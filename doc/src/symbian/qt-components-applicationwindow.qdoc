/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

    \qmlclass ApplicationWindow
    \ingroup qt-components
    \since 1.0
    \inherits Window

    \brief Provides a view template that contains several UI elements.

    Creates an easy-to-use view that has \l Window, \l StatusBar, \l ToolBar,
    and \l PageStack components. This component provides convenience properties
    that place child components into correct layouts.

    \note This component is experimental, so it may be changed or removed in
    future releases. It is recommended to use the \l PageStackWindow component instead.

    \section1 Using ApplicationWindow

    The example below illustrates the ApplicationWindow component's basic usage. The
    window contains a root \l Page object which contains a \l CheckBox. The
    CheckBox controls the ApplicationWindow's \c fullScreen property. Setting
    the \l ToolBarLayout to the \l Page's \c tools property enables the back
    button in the \l ToolBar.

    \snippet src/snippets/symbian/snippet-applicationwindow.qml 0
*/

/*!
    \qmlproperty bool ApplicationWindow::fullScreen

    Defines how the application content area fills the screen. If the property
    is \c true, the application content area fills the whole screen. If the
    property is \c false, the \l StatusBar and \l ToolBar components are
    visible and the application content area fills the area between the
    \l StatusBar and \l ToolBar components.

    The default value is \c false.
*/

/*!
    \qmlproperty list<QtObject> ApplicationWindow::content
    \default

    Enables the application content to be placed directly as a child of
    ApplicationWindow. The items in ApplicationWindow are laid out between the
    \l StatusBar and \l ToolBar components. Usually you do not need to directly
    access this property. However, if you create objects dynamically into the
    application content area, you should use this property as the parent of
    created objects.

*/

/*!
    \qmlproperty PageStack ApplicationWindow::pageStack
    A convenience property provided by ApplicationWindow. The application does not
    have to use it.
*/

/*!
    \qmlproperty variant ApplicationWindow::initialPage
    \since 1.1

    Sets the initial page of the \c PageStack. This can be a \l Page instance,
    component or an array. Once the construction is completed, the value
    will be pushed onto the stack. With this property, you can only set the
    root page of the stack i.e. if there are pages on the stack, changing the \c
    initialPage has no effect.

    \sa PageStack::push

*/

/*!
    \qmlproperty bool ApplicationWindow::softwareInputPanelEnabled
    \since 1.1
	
	ApplicationWindows content area size can be adjusted to accomodate
	software input panel. When proberty is set \c true size is adjusted.
	With \c false content size is not adjusted.
	
	The default value is \c false.
*/
