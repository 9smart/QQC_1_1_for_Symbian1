/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass TextArea
    \ingroup qt-components
    \since 1.0
    \inherits FocusScopeItem
    \brief
    Provides a component for editing and displaying both plain and rich text.

    The TextArea component displays a block of editable and formatted text. It
    can display both plain and rich text. TextArea implements the horizontal and
    vertical scrolling. Scroll bars appear when the content is flicked, or on the
    focus gain if the content does not fit to view port. TextArea is a superset
    of \l TextEdit to implement the Symbian-style look-and-feel. The clipboard
    support is provided by the \l cut(), \l copy(), and \l paste() functions.

    \sa {Entering Text with Split-view Input}

    \section1 TextArea Basic Examples

    The code examples below illustrate various features of TextArea.

    \table
    \header
        \o Code
        \o Appearance
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 0
        \o \image symbian/textarea_empty.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 1
        \o \image symbian/textarea_placeholdertext.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 2
        \o \image symbian/textarea_text.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 3
        \o \image symbian/textarea_text_focus.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 4
        \o \image symbian/textarea_flick.png
           \caption Appearance while draging. See the \l {Touch Interaction} section.
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 5
        \o \image symbian/textarea_readonly_disabled.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 6
        \o \image symbian/textarea_readonly_disabled.png
    \row
        \o \snippet src/snippets/symbian/snippet-textarea.qml 7
        \o \image symbian/textarea_error.png
    \endtable

    \section1 TextArea Selection in Symbian

    The examples below illustrate various TextArea selection features in Symbian.

    \table
    \header
        \o Selected Text
        \o Adjust Selection
    \row
        \o \image symbian/textarea_selected_text.png
        \o \image symbian/textarea_adjust_selection.png
    \endtable
    \table
    \header
        \o Place Cursor
        \o Paste Menu
    \row
        \o \image symbian/textarea_place_cursor.png
        \o \image symbian/textarea_paste.png
    \endtable

    \section1 Implicit Size Behaviour
    The text area resizes implicitly to accommodate more text. The maximum sizes
    are set with the \l platformMaxImplicitHeight and \l
    platformMaxImplicitWidth properties.
    \table
    \header
        \o Description
        \o Minimum Size
    \row
        \o The minimum implicit size for a TextArea is \c{20 * " "} on the
        current font.
        \o \image symbian/textarea_min_imp_size.png
    \row
        \o If there is a placeholderText defined, its length is the text's
        minimum implicit size.
        \o \image symbian/textarea_min_imp_size_placeholdertext.png
    \endtable


    \table
    \header
        \o Description
        \o Growth pattern
    \row
        \o With the default values a TextArea grows indefinitely to the right.
           \snippet src/snippets/symbian/snippet-textarea-implicit-size.qml 2
        \o \image symbian/textarea_min_imp_size.png
           \image symbian/textarea_imp_size_default.png
    \row
        \o The platformMaxImplicitWidth setting defines a TextArea's wrapping
        point. When that width is reached the TextArea grows indefinitely
        downwards.
           \snippet src/snippets/symbian/snippet-textarea-implicit-size.qml 3
        \o \image symbian/textarea_min_imp_size.png
           \image symbian/textarea_imp_size_platformmaximplicitwidth.png
    \row
        \o The platformMaxImplicitHeight and platformMaxImplicitWidth settings
           restrict a TextArea to grow only to those values.
           \snippet src/snippets/symbian/snippet-textarea-implicit-size.qml 4
        \o \image symbian/textarea_min_imp_size.png
           \image symbian/textarea_imp_size_platformmaximplicit.png
    \endtable
*/


/*!
    \qmlproperty font TextArea::font

    The text's font information in the TextArea.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html} {TextEdit}

*/

/*!
    \qmlproperty int TextArea::cursorPosition

    The position of the cursor in a TextArea.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#cursorPosition-prop}{TextEdit::cursorPosition}

*/

/*!
    \qmlproperty bool TextArea::errorHighlight

    If the value is \c true, the TextArea's graphics show that it contains
    invalid input; otherwise not.

*/

/*!
    \qmlproperty bool TextArea::enabled

    If the value is \c true, the user can interact with the TextArea; otherwise
    not.

    The default value is \c true.

    \sa readOnly

*/

/*!
    \qmlproperty int TextArea::horizontalAlignment
    \qmlproperty int TextArea::verticalAlignment

    Sets the horizontal and vertical alignment of the text within the TextArea
    item's width and height. By default, the text is top-left aligned.

    For details of the options, see: TextEdit::horizontalAlignment

*/

/*!
    \qmlproperty int TextArea::inputMethodHints

    Settings that indicate what kind of input can be accepted by the TextArea.
    The value is from \l {http://doc.qt.nokia.com/stable/qwidget.html#inputMethodHints-prop}{Qt::InputMethodHints}.

    \sa {http://doc.qt.nokia.com/stable/qwidget.html#inputMethodHints-prop}{Qt::InputMethodHints}

*/

/*!
    \qmlproperty bool TextArea::readOnly

    If the value is \c true, the user can interact (select, copy, and scroll)
    with but not edit the TextArea's text. If the value is \c false, the user
    can also edit the text.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#readOnly-prop}{TextEdit::readOnly}, enabled
*/



/*!
    \qmlproperty string TextArea::selectedText

    The currently selected text in the text field.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#selectedText-prop}{TextEdit::selectedText}
*/

/*!
    \qmlproperty int TextArea::selectionEnd

    The cursor position after the last character in the current selection.

    \sa selectionStart, selectedText, cursorPosition, {http://doc.qt.nokia.com/4.8/qml-textedit.html#selectionEnd-prop}{TextEdit::selectionEnd}

*/

/*!
    \qmlproperty int TextArea::selectionStart

    The cursor position before the first character in the current selection.

    \sa selectionEnd, selectedText, cursorPosition, {http://doc.qt.nokia.com/4.8/qml-textedit.html#selectionStart-prop}{TextEdit::selectionStart}

*/

/*!
    \qmlproperty string TextArea::text

    The text that has been entered into the text field.

*/

/*!
    \qmlproperty int TextArea::textFormat

    Defines whether the text is displayed as rich text or plain text. By default
    the format of the text is automatically determined.

    See TextEdit::textFormat for the enumeration details.

*/

/*!
    \qmlproperty int TextArea::wrapMode

    Defines whether the text in the TextArea is wrapped or not.

    See TextEdit::wrapMode for details of the different wrapping modes.

*/

/*!
    \qmlmethod TextArea::copy()

    Copies the currently selected text to the system clipboard.

    \sa paste, cut, {http://doc.qt.nokia.com/4.8/qml-textedit.html#copy-method}{TextEdit::copy()}

*/

/*!
    \qmlmethod TextArea::paste()

    Replaces the currently selected text by the contents of the system
    clipboard.

    \sa copy, cut, {http://doc.qt.nokia.com/4.8/qml-textedit.html#paste-method}{TextEdit::paste()}
*/

/*!
    \qmlmethod TextArea::cut()

    Moves the currently selected text to the system clipboard.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#cut-method}{TextEdit::cut()}
*/

/*!
    \qmlmethod TextArea::select(start, end)

    Selects the text from \a start to \a end.

    \sa selectionStart, selectionEnd, {http://doc.qt.nokia.com/4.8/qml-textedit.html#select-method}{TextEdit::select()}
*/

/*!
    \qmlmethod TextArea::selectAll()

    Selects all the text in the text field.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#selectAll-method}{TextEdit::selectAll()}

*/

/*!
    \qmlmethod TextArea::selectWord()

    Selects the word closest to the current cursor position.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#selectWord-method}{TextEdit::selectWord()}

*/

/*!
    \qmlmethod TextArea::positionAt(x, y)

    Returns the character position at \c x pixels from the left edge of the text
    field and \c y pixels from the top edge of the text field.

    \sa {http://doc.qt.nokia.com/4.8/qml-textedit.html#positionAt-method}{TextEdit::positionAt()}

*/


/*!
    \qmlmethod TextArea::positionToRectangle(pos)

    Returns the rectangle that the cursor would occupy if it was placed at \a
    pos character position.

    This is similar to setting the cursorPosition and then querying the cursor
    rectangle, but the cursorPosition is not changed.

    \sa cursorPosition, {http://doc.qt.nokia.com/4.8/qml-textedit.html#positionToRectangle-method}{TextEdit::positionToRectangle()}

*/

/*!
    \qmlmethod TextArea::openSoftwareInputPanel()

    Opens the virtual keyboard for typing. On Symbian-based devices the user can
    open the virtual keyboard by tapping the TextArea.

    \sa closeSoftwareInputPanel, {http://doc.qt.nokia.com/4.8/qml-textedit.html#openSoftwareInputPanel-method}{TextEdit::openSoftwareInputPanel()}
*/

/*!
    \qmlmethod TextArea::closeSoftwareInputPanel()

    Closes the virtual keyboard shown on the screen. On Symbian-based devices
    the user can open the virtual keyboard by tapping the TextArea.

    \note Currently closeSoftwareInputPanel does not work on Symbian. For more information, see \l
    {http://bugreports.qt.nokia.com/browse/QTBUG-20033}{QTBUG-20033}.

    \sa openSoftwareInputPanel, {http://doc.qt.nokia.com/4.8/qml-textedit.html#closeSoftwareInputPanel-method}{TextEdit::closeSoftwareInputPanel()}
*/

/*!
    \qmlproperty string TextArea::placeholderText

    The placeholder text that is shown in the TextArea to hint at the expected
    input. The placeholder text is shown in the TextArea as long as it has no
    focus and the user has not entered any text to the TextArea. The default
    value of placeholderText is an empty string.

*/

/*!
    \qmlproperty double TextArea::platformMaxImplicitWidth

    Defines the maximum width that the TextArea can grow to. If the width is
    explicitly set, this property has no effect.

    The default value for this property is \c -1 meaning that the width is
    allowed to grow infinitely.



    \sa platformMaxImplicitHeight
*/

/*!
    \qmlproperty double TextArea::platformMaxImplicitHeight

    Defines the maximum height that the TextArea can grow to. If the height is
    explicitly set, this property has no effect.

    The default value for this property is \c -1 meaning that the height is
    allowed to grow infinitely.


    \sa platformMaxImplicitWidth
*/

/*!
    \qmlproperty bool TextArea::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
