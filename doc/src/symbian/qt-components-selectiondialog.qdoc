/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass SelectionDialog
    \ingroup qt-components
    \since 1.0
    \inherits CommonDialog

    \brief Represents a list of choices to the user.

    With SelectionDialog you can customize the visual representation of the
    selectable items' list by overriding the ListView delegate. By default
    SelectionDialog provides a scrollable list of textual menu items. The user
    can choose one item from the list at a time.

    \section1 Using Data Models with SelectionDialog

    The example below illustrates how to use the data models with the
    SelectionDialog. It has two dialogs that both allow the user to choose from
    three different items. Both dialogs use the default \l delegate. The first
    dialog uses a simple string list model and the second dialog uses a
    ListModel that contains one named role.

    \snippet src/snippets/symbian/snippet-selectiondialog-model.qml 0

    \sa delegate

*/

/*!
    \qmlproperty variant SelectionDialog::model

    The model that defines the selection dialog’s item list. The SelectionDialog
    uses it as a ListView component’s model in the dialog. The default delegate assumes
    that the model data is provided via the \c modelData role and interprets it as a text string.
    If you use a custom delegate, the model can be anything supported by QML ListView component.

    \note If the model contains only one named role, it is always provided via
    the \c modelData role. This also applies to a simple string list model. For
    more information, see \l {external: QML Data Models}
    {QML Data Models} documentation.

*/

/*!
    \qmlproperty int SelectionDialog::selectedIndex

    Index of the currently selected item in the model.
    The default value is -1, which means that no item is selected.
*/

/*!
    \qmlproperty Component SelectionDialog::delegate

    Overrides the delegate component that visualizes the ListView model.
*/
