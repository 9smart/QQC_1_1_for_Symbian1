/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass ToolButton
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief Provides a tool button within a ToolBar enabling quick access to a
    function.

    ToolButton provides a different style of appearance compared to a normal
    Button. It is designed to only be used inside a ToolBarLayout. Alternatively it
    can be used inside a ButtonRow that is itself inside a ToolBarLayout.

    It is recommended that you use ToolButton for a button inside a \l ToolBar and
    \l Button for a button outside a \l ToolBar. Button may be shown incorrectly if it
    is placed inside a ToolBar. It may be too tall, for example.

    \note The ToolBarLayout will override the height and width of
    contained ToolButton children. Therefore you should not attempt to define
    the size or implicit size of a ToolButton.

    For more information on how to use ToolButton within a ToolBar, see the \l
    ToolBar documentation. It provides also various use cases.

    \sa ToolBar, ToolBarLayout, ButtonRow, TabButton

*/

/*!
    \qmlproperty bool ToolButton::checkable

    If \c checkable is \c true, the tool button acts like a pushable switch and
    stays "down" (or checked) if you press and release the button. If you press
    and release the tool button again, the tool button returns to the "up" (or
    unchecked) position.

    \sa checked
*/

/*!
    \qmlproperty bool ToolButton::checked

    If \c checked is \c false, the button appears as normal or "up". If \c
    checkable and \c checked are both \c true, and the button is not being
    pressed, the button appears as "down" or "checked".

    \note if \c checkable is true, the value of \c checked will be updated
    dynamically as the button is pressed and released.

    \note If the button contains just an icon, and the flat property is \c
    true, the checked button will have a distinctive appearance (when not
    pressed), whilst still appearing to be flat.

    \image symbian/toolbarlayout_toolbutton_icon_checkable.png

    \sa checkable

*/

/*!
    \qmlproperty bool ToolButton::enabled

    Indicates whether the ToolButton can be used or not. If the value is \c
    true, the ToolButton's appearance indicates to the user that they can use it;
    otherwise not. If the user presses the button whose value is \c false,
    neither signal is sent nor feedback is given.

    */

/*!
    \qmlproperty bool ToolButton::pressed

    While the user presses the ToolButton, the value is \c true; otherwise \c false.

*/

/*!
    \qmlproperty url ToolButton::iconSource

    The location or the name of the icon that is shown on the ToolButton. If
    the value is empty, neither icon is shown nor space is
    reserved within the layout for it.

    \note If the iconSource is set to one of the values below, the icon location
    in the resources will be automatically used.

    \image symbian/toolbutton_icons.png

   \omit

   Maintenance note: the source snippet used to generate toolbutton_icons.png
   is in src/snippets/symbian/snippet-toolbutton-icons.qml

    \endomit

    Normally it is expected that toolbar-back and toolbar-menu icons are used
    for the back button (in ToolBarLayout's first position) and the menu button
    (in ToolBarLayout's last position) respectively. The following example
    illustrates how to use this feature:

    \snippet src/snippets/symbian/snippet-toolbar-basic.qml toolbar1

    You can place additional content between the back button and the menu
    button. The \l ToolBarLayout documentation illustrates various possible
    layout configurations.

    \note You should use only the "toolbar-back" icon in the leftmost position.
    This is to enforce consistency between different applications.

*/

/*!
    \qmlproperty string ToolButton::text

    The text shown on the button. If the value is empty, no text is
    shown on the button, and no space will be reserved in the layout for it.

    If both a text and an icon are specified, the platform style determines
    whether either of them or both are shown. Often the icon is shown in
    preference to the text.

*/

/*!
    \qmlsignal ToolButton::clicked()

    This signal is emitted when the ToolButton is pressed and released within
    a short time.

*/

/*!
    \qmlproperty QtObject ToolButton::platformExclusiveGroup

    \e {Symbian:}

    The exclusive group that this tool button belongs to. In an exclusive
    group only one of the tool buttons can be selected at a time.

*/

/*!
    \qmlsignal ToolButton::platformPressAndHold()

    \e {Symbian:}

    This signal is emitted if the button is pressed for a long time.

*/

/*!
    \qmlsignal ToolButton::platformReleased()

    \e {Symbian:}

    This signal is emitted when the button is released.

*/

/*!
    \qmlproperty bool ToolButton::flat

    Defines whether the ToolButton looks "flat" or not. If the value is \c true:
    \list
    \o The ToolButton does not have a border and it looks flat when it is not
    pressed.
    \o The ToolButton with only an icon has a distinctive highlighted border when it
    is pressed.
    \endlist

    If the value is \c false, the ToolButton has a border.

    The value is automatically set to \c true if the ToolButton has only an
    icon; otherwise it is set to \c false. The default appearance of a
    ToolButton with an icon should be flat.

    Generally, if the ToolButton is an icon, you should leave this value to \c
    true, so that the icon merges with the toolbar. If the ToolButton has text,
    you should leave this value to \c false, so that the ToolButton's text
    stands out from the toolbar same way as a normal button. The screenshot
    below shows the non-flat and the flat ToolButton.

    \image symbian/toolbarlayout_toolbutton_text_flat.png

    \note
    \list
    \o If the ToolButton is within a ButtonRow, the value also applies to the
    segmented border appearance.
    \o If the button has neither icon nor text, the \c flat value is ignored,
    and only the border is shown. Otherwise the ToolButton would be invisible
    until the user presses it.
    \endlist
*/

/*!
    \qmlproperty bool ToolButton::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
