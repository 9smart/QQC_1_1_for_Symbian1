/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

    \qmlclass TabButton
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief Provides a tab button with an image or a label that the user can
    click.

    A tabbed interface is made up of tab buttons and content for each button. A
    tab button is usually positioned by the \l TabBarLayout, but compatible with
    other QML positioning mechanisms such as \l Row or \l Column elements.
    When positioned in a \l ToolBar, the \l ButtonRow is used for positioning.

    On the Symbian platform, a tab button can be also be positioned with the
    \l TabBar.

    \section1 Using a Tab Button

    When adding buttons to a layout, you need to associate a tab button with the
    content for the tab. You also set the text or image for the button. The
    code snippet below shows a \l TabBarLayout with three tab buttons. Each
    button has a text title and refers to the id of the tab content associated
    with the button.

    \snippet src/snippets/symbian/snippet-tabgroup.qml 1

    See the \l TabGroup documentation for more information about creating a
    tabbed interface.

    \sa TabBarLayout, TabGroup, TabBar
*/

/*!
    \qmlproperty Item TabButton::tab

    The reference to the tab content (one of the children of a \l
    TabGroup, usually a \l Page) that is activated when this TabButton is
    clicked.

    \note On some platforms there can be additional logic such as unwinding the
    page stack in a tab if the tab is already selected.

*/


/*!
    \qmlproperty bool TabButton::checked

    The value is \c true if this button is the button for the currently
    activated tab. Otherwise it is \c false.

    This is a read-only property and therefore should not be manipulated by the
    user.

*/


/*!
    \qmlproperty bool TabButton::pressed

    The value is \c true if the user is currently pressing the tab button.
    Otherwise it is \c false.

    This is a read-only property and therefore should not be manipulated by the
    user.

*/

/*!
    \qmlproperty string TabButton::text

    Text to be displayed on the button. The default value is an empty string.

*/


/*!
    \qmlproperty url TabButton::iconSource

    The URL for an image to be shown on the button. The default value is an empty
    string. Icons are automatically coloured with theme colours. TabButton treats
    svg images as icons. Other image formats and images with http scheme are not
    colored.
*/

/*!
    \qmlsignal TabButton::clicked()

    This signal is emitted when this button is pressed and then released.

*/

/*!
    \qmlproperty bool TabButton::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/
