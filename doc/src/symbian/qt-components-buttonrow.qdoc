/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass ButtonRow
    \ingroup qt-components
    \since 1.0
    \inherits Row

    \brief Provides a component for arranging a set of buttons in a row.

    The ButtonRow component is a container for buttons and items with the \c 
    checked property. It makes the child items equal-wide and arranges them in a 
    horizontal row. RadioButton and \c checkable button components can be made 
    mutually exclusive in a ButtonRow with the \c exclusive property. When you 
    place \l Button and \l ToolButton components in ButtonRow, they form a row 
    of seamless and segmented buttons.

    \section1 Creating a ButtonRow
    
    The code snippet below illustrates how to create a ButtonRow component that
    contains three buttons. The ButtonRow's \c exclusive property is not set, so it
    is \c true by default, and thus its child buttons are \c checkable. In
    addition, the 'b2' button is set to \c checked.

    \snippet src/snippets/symbian/snippet-buttonrow.qml 0

    The screenshot below illustrates the result of the code snippet.

    \image symbian/buttonrow.png

    \sa ButtonColumn
*/

/*!
    \qmlproperty bool ButtonRow::exclusive


    Indicates whether or not the ButtonRow's buttons are mutually exclusive,
    that is, only one button can be \c checked at a time. If the \c exclusive value is \c
    true, the buttons are \c checkable and mutually exclusive; otherwise not.

    The \c exclusive property is \c true by default.

*/

/*!
    \qmlproperty Item ButtonRow::checkedButton

    Defines which button in the ButtonRow is \c checked.


*/
