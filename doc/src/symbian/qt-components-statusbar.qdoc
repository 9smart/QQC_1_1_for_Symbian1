/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/
/*!

    \qmlclass StatusBar
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief Decorates an application with system information.

    The StatusBar shows important information of the device state such as
    network type, signal strength, and battery level.

    Usually the StatusBar is anchored on top of the \l Window component. The
    height of the bar is pre-set and there is no need for the application to
    override it. The height might also change when on the device orientation
    changes.

    Because the StatusBar information is important to the user, it is
    recommended to add a StatusBar instance to every application. If the
    application needs to expand the contents area over the StatusBar, the bar
    can be hidden temporarily and shown again when possible. You should not
    instantiate the StatusBar inside the \l Page component because the page
    transition effect would also apply to the StatusBar.

    \section1 Anchoring the StatusBar

    The code snippet below illustrates how to anchor the StatusBar on the top of
    the \l Window component.

    \snippet src/snippets/symbian/snippet-statusbar.qml 0

*/

/*!
    \qmlproperty bool StatusBar::platformInverted
    \since 1.1

    \e {Symbian:}

    If platformInverted is \c true, the component is visualized with the
    inverted style. For more information, see
    \l {Using Inverted Style with Symbian Components}. By default
    platformInverted is \c false.
*/

